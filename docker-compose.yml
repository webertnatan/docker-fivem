version: '3.8'

services:
  apache:
    image: httpd:2.4
    container_name: apache
    restart: always
    ports:
      - "8080:80"
    volumes:
      - ./apache/html:/usr/local/apache2/htdocs/
    networks:
      - fivemnet

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    ports:
      - "8001:80"
      - "443:443"
    volumes:
      - /root/docker-fivem/nginx/nginx.conf:/etc/nginx/nginx.conf
      - /root/docker-fivem/nginx/conf.d:/etc/nginx/conf.d
      - /etc/letsencrypt:/etc/letsencrypt:ro
    networks:
      - fivemnet

  mysql:
    image: mariadb:10.11
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      TZ: ${TIMEZONE}
    command: --sql_mode=NO_ENGINE_SUBSTITUTION
    volumes:
      - mysql_data:/var/lib/mysql
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "3306:3306"
    depends_on:
      - apache
    networks:
      - fivemnet

  fivem:
    build: ./fxserver
    container_name: fivem
    env_file:
      - .env
    stdin_open: true
    tty: true
    environment:
      SERVER_ARGS: "+set txAdminEnable true +exec server.cfg +steam_webApiKey ${steamKey} +sv_licenseKey ${licenseKey}"
    restart: always
    working_dir: /srv
    command: "./run.sh"
    volumes:
      - ./fxserver/server.cfg:/srv/server.cfg
      - ./fxserver/resources:/srv/resources
      - ./fxserver/cache:/srv/cache
      - ./fxserver/config:/srv/config
      - ./cfx-server:/srv/alpine/opt/cfx-server
      - ./fxserver/txData:/srv/txData
    ports:
      - "30120:30120/tcp"
      - "30120:30120/udp"
      - "40120:40120"
    depends_on:
      - mysql
    networks:
      - fivemnet

  drone:
    image: drone/drone:latest
    container_name: drone
    ports:
      - 8000:80
    volumes:
      - /var/lib/drone:/data
      - /root/docker-fivem:/repo
    restart: always
    environment:
      DRONE_GITHUB_CLIENT_ID: ${DRONE_GITHUB_CLIENT_ID}
      DRONE_GITHUB_CLIENT_SECRET: ${DRONE_GITHUB_CLIENT_SECRET}
      DRONE_RPC_SECRET: ${DRONE_RPC_SECRET}
      DRONE_SERVER_HOST: ${DRONE_SERVER_HOST}
      DRONE_SERVER_PROTO: ${DRONE_SERVER_PROTO}
      DRONE_SERVER_PROXY_PATH: ${DRONE_SERVER_PROXY_PATH}
      DRONE_SERVER_OPTS: "--proxy-path=/drone"
      DRONE_COOKIE_SECRET: ${DRONE_COOKIE_SECRET}
      DRONE_USER_CREATE: username:${DRONE_USER},admin:true
    networks:
      - fivemnet
  
  runner:
    image: drone/drone-runner-docker:latest
    container_name: drone-runner
    restart: always
    environment:
      DRONE_RPC_PROTO: http
      DRONE_RPC_HOST: drone:80
      DRONE_RPC_SECRET: ${DRONE_RPC_SECRET}
      DRONE_RUNNER_CAPACITY: 2
      DRONE_RUNNER_NAME: runner
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - fivemnet

volumes:
  mysql_data:

networks:
  fivemnet:
